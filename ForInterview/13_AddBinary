给你两个二进制字符串，返回它们的和（用二进制表示）。
输入为 非空 字符串且只包含数字 1 和 0。
示例 1:
输入: a = "11", b = "1"
输出: "100"
示例 2:
输入: a = "1010", b = "1011"
输出: "10101" 

提示：
每个字符串仅由字符 '0' 或 '1' 组成。
1 <= a.length, b.length <= 10^4
字符串如果不是 "0" ，就都不含前导零。
class Solution {
public:
    string addBinary(string a, string b) {
        string digits;
        int temp=0,a1,b1,t,i,j;
        for(i=a.length()-1,j=b.length()-1;i>=0||j>=0;i--,j--){
            a1=  i>=0? a[i]-'0':0;
            b1=  j>=0? b[j]-'0':0;
            t=a1+b1+temp;
            if(t>=2) {
                digits.insert(digits.begin(),1,t%2+'0');//注意要取模
                temp=1;
            }else{ 
                digits.insert(digits.begin(),1,t+'0');//先插入再重置temp
                temp=0;
            }

        }
        if(temp==1) digits.insert(digits.begin(),1,1+'0');
        return digits;
    }
};
