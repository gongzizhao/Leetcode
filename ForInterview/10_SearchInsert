给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。
你可以假设数组中无重复元素。
示例 1:
输入: [1,3,5,6], 5
输出: 2
示例 2:
输入: [1,3,5,6], 2
输出: 1

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int i;
        for(i=0;i<nums.size();i++){
            if(target<=nums[i]) return i;
        }
        return i;
    }
};

////////////////////////////二分法//////////////////////////////

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int l = 0, r = nums.size();
        while(l < r) {
            int mid = l + r >> 1;
            if(nums[mid] == target) return mid; //追求简洁可以删除此行，追求时间可以加入此行
            nums[mid] < target ? l = mid + 1 : r = mid;
        }
        return l;
    }
};
