给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。

说明:
初始化 nums1 和 nums2 的元素数量分别为 m 和 n 。
你可以假设 nums1 有足够的空间（空间大小大于或等于 m + n）来保存 nums2 中的元素。
 示例:
输入:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3
输出: [1,2,2,3,5,6]

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int last = m+n-1;
        while(n){//如果nums1的数字已经复制完，不要忘记把nums2 的数字继续复制；如果nums2 的数字已经复制完，剩余nums1 的数字不需要改变，因为它们已经被排好序。
            if(m==0){
                nums1[last--]=nums2[--n];
            }else if(nums1[m-1]>nums2[n-1]){
                nums1[last--]=nums1[--m];
            }else nums1[last--]=nums2[--n];
        }
    }
};
//如果只是希望增加a 的值，而不需要返回值，则推荐使用++a，其运行速度会略快一些。
